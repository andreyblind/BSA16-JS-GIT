1.1 Работа с историей изменений. Написать команды:

которая выводит сообщения и автора всех коммитов из ветки develop-feature1, которые сделаны за последние 3 часа и которых нет в родительских ветках (develop, master). Сортировка по дате, первые более новые.

git checkout develop-feature1 && git log --since=3.hours --date-order --pretty=format:"%an, %s" --no-merges master.. develop..

1.2
выводит для каждого коммита из веток master, develop, в сообщении которых есть упоминание заданного номера задачи (допустим задачи 231), его сообщение, автора и дату. Сортировка по дате, первые более новые.

git log --branches="master, develop" --date-order --pretty=format:"%an, %s, %ad" | grep 007

2.
как добавить в develop только ваш коммит, но чтобы 3 коммита после него в develop не попали?

git checkout develop && git cherry-pick 2494f26c1ecda7c429f4dac59ee329b0c7124886

3. Предложите вариант, как наиболее просто исправить ситуацию, чтобы тим лид не увидел ваш промах.

В случае, если ошибочное описание только в последнем коммите можно сделать так:
git commit --amend -m "новое описание коммита" && git push -f origin/develop-feature3

ключ -f необходим, поскольку в ветке на сервере другое описание коммита.


Если же необходимо изменить несколько коммитов - можно воспользоваться утилитой rebase для перемещения коммитов в то же место, где они и были:

git rebase -i HEAD~2

Откроется редактор, в котором мы можем редактировать последние 2 коммита. Необходимо поменять "pick" на "edit" в тех коммитах, которые мы хотим изменить.
Далее необходимо сохранить изменения и выйти из редактора. Гит откатится к последнему коммиту из списка выше. Далее необходимо сделать изменения в описании нужного коммита:

git commit --amend

После внесения изменений необходимо выйти из редактора и выполнить: 

git rebase --continue

Эта команда применит оставшиеся коммиты.

Далее необходимо внесенные изменения залить на сервер:

git push -f origin/develop-feature3

